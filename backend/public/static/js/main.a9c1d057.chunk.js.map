{"version":3,"sources":["shared/context/auth-context.jsx","shared/components/UIElements/LoadingSpinner.jsx","shared/components/UIElements/Backdrop.jsx","shared/components/hooks/auth-hook.jsx","shared/components/Navigation/MainHeader.jsx","shared/components/Navigation/NavLinks.jsx","shared/components/Navigation/SideDrawer.jsx","shared/components/Navigation/MainNavigation.jsx","App.jsx","index.jsx"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","React","createElement","className","concat","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","NavLink","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","_useState","useState","_useState2","_slicedToArray","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Link","Users","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","_useAuth","params","setToken","_useState3","_useState4","tokenExpirationDate","setTokenExpirationDate","_useState5","_useState6","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","Switch","Route","path","component","Redirect","Provider","value","Router","Suspense","fallback","render"],"mappings":"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","file":"static/js/main.a9c1d057.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = (params) => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState();\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    // scoped varible not effecting useState\n    const tokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(tokenExpirationDate);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token: token,\n        expiration: tokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(\n    (params) => {\n      if (token && tokenExpirationDate) {\n        const remainingTime = tokenExpirationDate.getTime() - new Date();\n        logoutTimer = setTimeout(logout, remainingTime);\n      } else {\n        clearTimeout(logoutTimer);\n      }\n    },\n    [token, logout, tokenExpirationDate]\n  );\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from 'react'\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return (\n    <header className='main-header'>\n        {props.children}\n    </header>\n  )\n}\n\nexport default MainHeader","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport \"./NavLinks.css\";\nimport { AuthContext } from \"../../context/auth-context\";\n\nconst NavLinks = () => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from \"react-transition-group\";\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = (props) => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={2000}\n      classNames={\"slide-in-left\"}\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MainNavigation.css\";\nimport MainHeader from \"./MainHeader\";\nimport NavLinks from \"./NavLinks\";\nimport SideDrawer from \"./SideDrawer\";\nimport Backdrop from \"../UIElements/Backdrop\";\n\nconst MainNavigation = (props) => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\n      {drawerIsOpen ? (\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n          <nav className=\"main-navigation__drawer-nav\">\n            <NavLinks />\n          </nav>\n        </SideDrawer>\n      ) : null}\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">Your Places</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom/cjs/react-router-dom.min\";\n\n// import Users from \"./users/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./users/pages/Auth\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/components/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" component={Users} exact />\n        <Route path=\"/:uid/places\" component={UserPlaces} exact />\n        <Route path=\"/places/new\" component={NewPlace} exact />\n        <Route path=\"/places/:pid\" component={UpdatePlace} exact />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" component={Users} exact />\n        <Route path=\"/:uid/places\" component={UserPlaces} exact />\n        <Route path=\"/auth\" component={Auth} exact />\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}